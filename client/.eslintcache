[{"/Users/lars/Documents/Workspaces/udacity-project-todo/client/src/index.tsx":"1","/Users/lars/Documents/Workspaces/udacity-project-todo/client/src/serviceWorker.ts":"2","/Users/lars/Documents/Workspaces/udacity-project-todo/client/src/routing.tsx":"3","/Users/lars/Documents/Workspaces/udacity-project-todo/client/src/auth/Auth.js":"4","/Users/lars/Documents/Workspaces/udacity-project-todo/client/src/App.tsx":"5","/Users/lars/Documents/Workspaces/udacity-project-todo/client/src/components/Callback.tsx":"6","/Users/lars/Documents/Workspaces/udacity-project-todo/client/src/config.ts":"7","/Users/lars/Documents/Workspaces/udacity-project-todo/client/src/components/LogIn.tsx":"8","/Users/lars/Documents/Workspaces/udacity-project-todo/client/src/components/NotFound.tsx":"9","/Users/lars/Documents/Workspaces/udacity-project-todo/client/src/components/Todos.tsx":"10","/Users/lars/Documents/Workspaces/rate-myfood/client/src/index.tsx":"11","/Users/lars/Documents/Workspaces/rate-myfood/client/src/serviceWorker.ts":"12","/Users/lars/Documents/Workspaces/rate-myfood/client/src/routing.tsx":"13","/Users/lars/Documents/Workspaces/rate-myfood/client/src/auth/Auth.js":"14","/Users/lars/Documents/Workspaces/rate-myfood/client/src/App.tsx":"15","/Users/lars/Documents/Workspaces/rate-myfood/client/src/components/Callback.tsx":"16","/Users/lars/Documents/Workspaces/rate-myfood/client/src/config.ts":"17","/Users/lars/Documents/Workspaces/rate-myfood/client/src/components/LogIn.tsx":"18","/Users/lars/Documents/Workspaces/rate-myfood/client/src/components/EditProduct.tsx":"19","/Users/lars/Documents/Workspaces/rate-myfood/client/src/components/NotFound.tsx":"20","/Users/lars/Documents/Workspaces/rate-myfood/client/src/components/Products.tsx":"21","/Users/lars/Documents/Workspaces/rate-myfood/client/src/api/products-api.ts":"22","/Users/lars/Documents/Workspaces/rate-myfood/client/src/components/Ratings.tsx":"23","/Users/lars/Documents/Workspaces/rate-myfood/client/src/api/ratings-api.ts":"24"},{"size":518,"mtime":1606492580668,"results":"25","hashOfConfig":"26"},{"size":5201,"mtime":1606492580669,"results":"27","hashOfConfig":"26"},{"size":888,"mtime":1606492580669,"results":"28","hashOfConfig":"26"},{"size":2768,"mtime":1606492580668,"results":"29","hashOfConfig":"26"},{"size":2472,"mtime":1606492580667,"results":"30","hashOfConfig":"26"},{"size":211,"mtime":1606492580668,"results":"31","hashOfConfig":"26"},{"size":364,"mtime":1612258508947,"results":"32","hashOfConfig":"26"},{"size":493,"mtime":1606492580668,"results":"33","hashOfConfig":"26"},{"size":221,"mtime":1606492580668,"results":"34","hashOfConfig":"26"},{"size":5147,"mtime":1606492580668,"results":"35","hashOfConfig":"26"},{"size":518,"mtime":1612941085120,"results":"36","hashOfConfig":"37"},{"size":5201,"mtime":1612941085124,"results":"38","hashOfConfig":"37"},{"size":888,"mtime":1612941085123,"results":"39","hashOfConfig":"37"},{"size":2768,"mtime":1612941085112,"results":"40","hashOfConfig":"37"},{"size":2815,"mtime":1612941085110,"results":"41","hashOfConfig":"37"},{"size":211,"mtime":1612941085113,"results":"42","hashOfConfig":"37"},{"size":364,"mtime":1612860484493,"results":"43","hashOfConfig":"37"},{"size":493,"mtime":1612941085115,"results":"44","hashOfConfig":"37"},{"size":2409,"mtime":1612941085114,"results":"45","hashOfConfig":"37"},{"size":221,"mtime":1612941085115,"results":"46","hashOfConfig":"37"},{"size":5201,"mtime":1612945476678,"results":"47","hashOfConfig":"37"},{"size":2023,"mtime":1612941085111,"results":"48","hashOfConfig":"37"},{"size":5482,"mtime":1612941085118,"results":"49","hashOfConfig":"37"},{"size":2139,"mtime":1612941085111,"results":"50","hashOfConfig":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},"1uj8mbs",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"77"},"1k7ia4o",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"77"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"/Users/lars/Documents/Workspaces/udacity-project-todo/client/src/index.tsx",["106"],"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport * as serviceWorker from './serviceWorker'\nimport 'semantic-ui-css/semantic.min.css'\nimport { makeAuthRouting } from './routing';\n\nReactDOM.render(makeAuthRouting(), document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n",["107","108"],"/Users/lars/Documents/Workspaces/udacity-project-todo/client/src/serviceWorker.ts",[],"/Users/lars/Documents/Workspaces/udacity-project-todo/client/src/routing.tsx",[],"/Users/lars/Documents/Workspaces/udacity-project-todo/client/src/auth/Auth.js",[],["109","110"],"/Users/lars/Documents/Workspaces/udacity-project-todo/client/src/App.tsx",[],"/Users/lars/Documents/Workspaces/udacity-project-todo/client/src/components/Callback.tsx",[],"/Users/lars/Documents/Workspaces/udacity-project-todo/client/src/config.ts",[],"/Users/lars/Documents/Workspaces/udacity-project-todo/client/src/components/LogIn.tsx",[],"/Users/lars/Documents/Workspaces/udacity-project-todo/client/src/components/NotFound.tsx",[],"/Users/lars/Documents/Workspaces/udacity-project-todo/client/src/components/Todos.tsx",["111"],"import dateFormat from 'dateformat'\nimport { History } from 'history'\nimport update from 'immutability-helper'\nimport * as React from 'react'\nimport {\n  Button,\n  Checkbox,\n  Divider,\n  Grid,\n  Header,\n  Icon,\n  Input,\n  Image,\n  Loader\n} from 'semantic-ui-react'\n\nimport { createTodo, deleteTodo, getTodos, patchTodo } from '../api/todos-api'\nimport Auth from '../auth/Auth'\nimport { Todo } from '../types/Todo'\n\ninterface TodosProps {\n  auth: Auth\n  history: History\n}\n\ninterface TodosState {\n  todos: Todo[]\n  newTodoName: string\n  loadingTodos: boolean\n}\n\nexport class Todos extends React.PureComponent<TodosProps, TodosState> {\n  state: TodosState = {\n    todos: [],\n    newTodoName: '',\n    loadingTodos: true\n  }\n\n  handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ newTodoName: event.target.value })\n  }\n\n  onEditButtonClick = (todoId: string) => {\n    this.props.history.push(`/todos/${todoId}/edit`)\n  }\n\n  onTodoCreate = async (event: React.ChangeEvent<HTMLButtonElement>) => {\n    try {\n      const dueDate = this.calculateDueDate()\n      const newTodo = await createTodo(this.props.auth.getIdToken(), {\n        name: this.state.newTodoName,\n        dueDate\n      })\n      this.setState({\n        todos: [...this.state.todos, newTodo],\n        newTodoName: ''\n      })\n    } catch {\n      alert('Todo creation failed')\n    }\n  }\n\n  onTodoDelete = async (todoId: string) => {\n    try {\n      await deleteTodo(this.props.auth.getIdToken(), todoId)\n      this.setState({\n        todos: this.state.todos.filter(todo => todo.todoId != todoId)\n      })\n    } catch {\n      alert('Todo deletion failed')\n    }\n  }\n\n  onTodoCheck = async (pos: number) => {\n    try {\n      const todo = this.state.todos[pos]\n      await patchTodo(this.props.auth.getIdToken(), todo.todoId, {\n        name: todo.name,\n        dueDate: todo.dueDate,\n        done: !todo.done\n      })\n      this.setState({\n        todos: update(this.state.todos, {\n          [pos]: { done: { $set: !todo.done } }\n        })\n      })\n    } catch {\n      alert('Todo deletion failed')\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      const todos = await getTodos(this.props.auth.getIdToken())\n      this.setState({\n        todos,\n        loadingTodos: false\n      })\n    } catch (e) {\n      alert(`Failed to fetch todos: ${e.message}`)\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Header as=\"h1\">TODOs</Header>\n\n        {this.renderCreateTodoInput()}\n\n        {this.renderTodos()}\n      </div>\n    )\n  }\n\n  renderCreateTodoInput() {\n    return (\n      <Grid.Row>\n        <Grid.Column width={16}>\n          <Input\n            action={{\n              color: 'teal',\n              labelPosition: 'left',\n              icon: 'add',\n              content: 'New task',\n              onClick: this.onTodoCreate\n            }}\n            fluid\n            actionPosition=\"left\"\n            placeholder=\"To change the world...\"\n            onChange={this.handleNameChange}\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Divider />\n        </Grid.Column>\n      </Grid.Row>\n    )\n  }\n\n  renderTodos() {\n    if (this.state.loadingTodos) {\n      return this.renderLoading()\n    }\n\n    return this.renderTodosList()\n  }\n\n  renderLoading() {\n    return (\n      <Grid.Row>\n        <Loader indeterminate active inline=\"centered\">\n          Loading TODOs\n        </Loader>\n      </Grid.Row>\n    )\n  }\n\n  renderTodosList() {\n    return (\n      <Grid padded>\n        {this.state.todos.map((todo, pos) => {\n          return (\n            <Grid.Row key={todo.todoId}>\n              <Grid.Column width={1} verticalAlign=\"middle\">\n                <Checkbox\n                  onChange={() => this.onTodoCheck(pos)}\n                  checked={todo.done}\n                />\n              </Grid.Column>\n              <Grid.Column width={10} verticalAlign=\"middle\">\n                {todo.name}\n              </Grid.Column>\n              <Grid.Column width={3} floated=\"right\">\n                {todo.dueDate}\n              </Grid.Column>\n              <Grid.Column width={1} floated=\"right\">\n                <Button\n                  icon\n                  color=\"blue\"\n                  onClick={() => this.onEditButtonClick(todo.todoId)}\n                >\n                  <Icon name=\"pencil\" />\n                </Button>\n              </Grid.Column>\n              <Grid.Column width={1} floated=\"right\">\n                <Button\n                  icon\n                  color=\"red\"\n                  onClick={() => this.onTodoDelete(todo.todoId)}\n                >\n                  <Icon name=\"delete\" />\n                </Button>\n              </Grid.Column>\n              {todo.attachmentUrl && (\n                <Image src={todo.attachmentUrl} size=\"small\" wrapped />\n              )}\n              <Grid.Column width={16}>\n                <Divider />\n              </Grid.Column>\n            </Grid.Row>\n          )\n        })}\n      </Grid>\n    )\n  }\n\n  calculateDueDate(): string {\n    const date = new Date()\n    date.setDate(date.getDate() + 7)\n\n    return dateFormat(date, 'yyyy-mm-dd') as string\n  }\n}\n","/Users/lars/Documents/Workspaces/rate-myfood/client/src/index.tsx",["112"],["113","114"],"/Users/lars/Documents/Workspaces/rate-myfood/client/src/serviceWorker.ts",[],"/Users/lars/Documents/Workspaces/rate-myfood/client/src/routing.tsx",[],"/Users/lars/Documents/Workspaces/rate-myfood/client/src/auth/Auth.js",[],["115","116"],"/Users/lars/Documents/Workspaces/rate-myfood/client/src/App.tsx",[],"/Users/lars/Documents/Workspaces/rate-myfood/client/src/components/Callback.tsx",[],"/Users/lars/Documents/Workspaces/rate-myfood/client/src/config.ts",[],"/Users/lars/Documents/Workspaces/rate-myfood/client/src/components/LogIn.tsx",[],"/Users/lars/Documents/Workspaces/rate-myfood/client/src/components/EditProduct.tsx",[],"/Users/lars/Documents/Workspaces/rate-myfood/client/src/components/NotFound.tsx",[],"/Users/lars/Documents/Workspaces/rate-myfood/client/src/components/Products.tsx",["117","118","119","120"],"/Users/lars/Documents/Workspaces/rate-myfood/client/src/api/products-api.ts",[],"/Users/lars/Documents/Workspaces/rate-myfood/client/src/components/Ratings.tsx",["121","122","123","124","125"],"import { History } from 'history'\nimport update from 'immutability-helper'\nimport * as React from 'react'\nimport {\n  Button,\n  Divider,\n  Header,\n  Icon,\n  Input,\n  Image,\n  Loader,\n  Grid,\n  Form, Table\n} from 'semantic-ui-react'\n\nimport Auth from '../auth/Auth'\nimport { Rating } from '../types/Rating'\n\nimport {createRating, deleteRating, getRatings, patchRating} from \"../api/ratings-api\";\n\n\ninterface RatingsProps {\n  auth: Auth\n  history: History\n}\n\ninterface RatingState {\n  ratings: Rating[]\n  newStarRating: number,\n  newStoreName: string,\n  productId: string,\n  loadingRatings: boolean,\n  newAttachmentUrl: string\n}\n\nexport class Ratings extends React.PureComponent<RatingsProps, RatingState> {\n  state: RatingState = {\n    ratings: [],\n    newStarRating: 0,\n    newStoreName: '',\n    productId: '',\n    loadingRatings: true,\n    newAttachmentUrl: ''\n  }\n\n  handleProductIdChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ productId: event.target.value })\n  }\n\n  handleStarChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ newStarRating: +event.target.value })\n  }\n\n  handleStoreChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ newStoreName: event.target.value })\n  }\n\n  onEditButtonClick = (ratingId: string) => {\n    this.props.history.push(`/products/ratings/${ratingId}/edit`)\n  }\n\n  onRatingCreate = async (event: React.FormEvent<HTMLFormElement>) => {\n    try {\n      const purchaseDate = this.calculatePurchaseDate()\n      const newRating = await createRating(this.props.auth.getIdToken(),this.state.productId,{\n        store: this.state.newStoreName,\n        stars: this.state.newStarRating,\n        purchaseDate,\n        attachmentUrl: ''\n      })\n      this.setState({\n        ratings: [...this.state.ratings, newRating]\n      })\n    } catch {\n      alert('Rating creation failed')\n    }\n  }\n\n  onRatingDelete = async (ratingId: string) => {\n    try {\n      await deleteRating(this.props.auth.getIdToken(), ratingId)\n      this.setState({\n        ratings: this.state.ratings.filter(rating => rating.ratingId != ratingId)\n      })\n    } catch {\n      alert('Rating deletion failed')\n    }\n  }\n\n  onRatingCheck = async (pos: number) => {\n    try {\n      const rating = this.state.ratings[pos]\n      await patchRating(this.props.auth.getIdToken(), rating.ratingId, {\n        stars: rating.stars,\n        purchaseDate: rating.purchaseDate\n      })\n    } catch {\n      alert('Rating update failed')\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      const ratings = await getRatings(this.props.auth.getIdToken())\n      this.setState({\n        ratings,\n        loadingRatings: false\n      })\n    } catch (e) {\n      alert(`Failed to fetch ratings: ${e.message}`)\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Header as=\"h1\">Ratings</Header>\n\n    {this.renderCreateRatingInput()}\n\n    {this.renderRatings()}\n    </div>\n  )\n  }\n\n  renderCreateRatingInput() {\n    return(\n      <Form onSubmit={this.onRatingCreate}>\n        <Form.Field>\n          <label>ProductId</label>\n          <input onChange={this.handleProductIdChange} placeholder='ProductID' />\n        </Form.Field>\n        <Form.Field>\n          <label>Store Name</label>\n          <input onChange={this.handleStoreChange} placeholder='Store Name' />\n        </Form.Field>\n        <Form.Field>\n          <label>Rating</label>\n          <input onChange={this.handleStarChange} placeholder='Rating' />\n        </Form.Field>\n        <Button type='submit'>Add Rating</Button>\n      </Form>\n    )\n  }\n\n  renderRatings() {\n    if (this.state.loadingRatings) {\n      return this.renderLoading()\n    }\n\n    return this.renderRatingsList()\n  }\n\n  renderLoading() {\n    return (\n      <Grid.Row>\n        <Loader indeterminate active inline=\"centered\">\n      Loading Ratings\n    </Loader>\n    </Grid.Row>\n  )\n  }\n\n  renderRatingsList() {\n    return(\n      <Table basic='very' celled collapsing>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>Rating ID</Table.HeaderCell>\n            <Table.HeaderCell>Product ID</Table.HeaderCell>\n            <Table.HeaderCell>Stars</Table.HeaderCell>\n            <Table.HeaderCell>Purchase Date</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        {\n          this.state.ratings.map((rating, pos) => {\n            return (\n                <Table.Body>\n                  <Table.Row>\n                    <Table.Cell width={7}>\n                      {rating.ratingId}\n                    </Table.Cell>\n                    <Table.Cell width={7}>\n                      {rating.productId}\n                    </Table.Cell>\n                    <Table.Cell width={3}>\n                      {rating.stars}\n                    </Table.Cell>\n                    <Table.Cell width={7}>\n                      {rating.purchaseDate}\n                    </Table.Cell>\n                    <Table.Cell>\n                      <Button\n                        icon\n                        color=\"red\"\n                        onClick={() => this.onRatingDelete(rating.ratingId)}\n                      >\n                        <Icon name=\"delete\"/>\n                      </Button>\n                    </Table.Cell>\n                  </Table.Row>\n                </Table.Body>\n                )})\n        }\n      </Table>\n    )\n  }\n\n  calculatePurchaseDate(): string {\n    const date = new Date()\n    const now = date.toISOString()\n    return now\n  }\n\n}\n","/Users/lars/Documents/Workspaces/rate-myfood/client/src/api/ratings-api.ts",[],{"ruleId":"126","severity":1,"message":"127","line":1,"column":8,"nodeType":"128","messageId":"129","endLine":1,"endColumn":13},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":67,"column":60,"nodeType":"136","messageId":"137","endLine":67,"endColumn":62},{"ruleId":"126","severity":1,"message":"127","line":1,"column":8,"nodeType":"128","messageId":"129","endLine":1,"endColumn":13},{"ruleId":"130","replacedBy":"138"},{"ruleId":"132","replacedBy":"139"},{"ruleId":"130","replacedBy":"138"},{"ruleId":"132","replacedBy":"139"},{"ruleId":"126","severity":1,"message":"140","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":14},{"ruleId":"126","severity":1,"message":"141","line":6,"column":3,"nodeType":"128","messageId":"129","endLine":6,"endColumn":10},{"ruleId":"126","severity":1,"message":"142","line":10,"column":3,"nodeType":"128","messageId":"129","endLine":10,"endColumn":8},{"ruleId":"134","severity":1,"message":"135","line":71,"column":75,"nodeType":"136","messageId":"137","endLine":71,"endColumn":77},{"ruleId":"126","severity":1,"message":"140","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":14},{"ruleId":"126","severity":1,"message":"141","line":6,"column":3,"nodeType":"128","messageId":"129","endLine":6,"endColumn":10},{"ruleId":"126","severity":1,"message":"142","line":9,"column":3,"nodeType":"128","messageId":"129","endLine":9,"endColumn":8},{"ruleId":"126","severity":1,"message":"143","line":10,"column":3,"nodeType":"128","messageId":"129","endLine":10,"endColumn":8},{"ruleId":"134","severity":1,"message":"135","line":83,"column":70,"nodeType":"136","messageId":"137","endLine":83,"endColumn":72},"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-native-reassign",["144"],"no-negated-in-lhs",["145"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["144"],["145"],"'update' is defined but never used.","'Divider' is defined but never used.","'Input' is defined but never used.","'Image' is defined but never used.","no-global-assign","no-unsafe-negation"]